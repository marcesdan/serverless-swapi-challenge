service: extending-swapi-challenge

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:175589830385:table/vehicleTable
        - Effect: Allow
          Action: 'dynamodb:*'
          Resource: arn:aws:dynamodb:us-east-1:175589830385:table/starshipTable

plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline

custom:
  esbuild:
    bundle: true
    minify: true
    external:
      - aws-sdk
    watch:
      pattern: [ './index.ts', 'src/**/*.ts' ]
      ignore: [ '.serverless/**/*', '.build' ]
  serverless-dynamodb:
  # If you only want to use DynamoDB Local in some stages, declare them here
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true

functions:
  get-vehicles:
    handler: src/getVehicles/handler.default
    events:
      - http:
          path: vehicle
          method: GET
          cors: true
  get-starships:
    handler: src/getStarships/handler.default
    events:
      - http:
          path: starship
          method: GET
          cors: true
  update-vehicle:
    handler: src/updateVehicle/handler.default
    events:
      - http:
          path: vehicle/{id}
          method: PUT
          cors: true
          request:
            parameters:
              paths:
                id: true
            schemas:
              application/json: ${file(schemas/vehicle-schema.json)}
  update-starship:
    handler: src/updateStarship/handler.default
    events:
      - http:
          path: starship/{id}
          method: PUT
          cors: true
          request:
            parameters:
              paths:
                id: true
            schemas:
              application/json: ${file(schemas/starship-schema.json)}

resources:
  Resources:
    vehicleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: vehicleTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    starshipTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: starshipTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
